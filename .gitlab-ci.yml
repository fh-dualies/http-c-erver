image: gcc

stages:
  - build
  - unit
  - http

build-job:
  stage: build
  before_script:
    - apt-get update
    - apt-get install --yes cmake
  script:
    - echo "Compiling the code..."
    - cmake . && make
    - echo "Compile complete."

unit-test:
  stage: unit
  before_script:
    - apt-get update
    - apt-get install -y cmake
  script:
    - echo "Compiling the code..."
    - cmake . && make
    - echo "Running tests..."
    - ./build/tests.out

unit-test-job-valgrind:
  stage: unit
  before_script:
    - apt-get update
    - apt-get install --yes cmake valgrind
  script:
    - echo "Compiling the code..."
    - cmake . && make
    - echo "Running tests..."
    - valgrind --tool=memcheck --gen-suppressions=all --leak-check=full --leak-resolution=med --track-origins=yes --vgdb=no --trace-children=yes --error-exitcode=1 ./build/tests.out --output-on-failure

unit-test-job-asan:
  stage: unit
  before_script:
    - apt-get update
    - apt-get install --yes cmake
    - echo "set(CMAKE_C_FLAGS \"\${CMAKE_C_FLAGS} -fsanitize=address -g -fno-omit-frame-pointer -O1\")" >> CMakeLists.txt
  script:
    - echo "Compiling the code..."
    - cmake . && make
    - echo "Running tests..."
    - ./build/tests.out --output-on-failure

http-test-job:
    stage: http
    before_script:
        - apt-get update
        - apt-get install --yes cmake
        - apt-get install --yes python3
    script:
        - echo "Compiling the code..."
        - cmake . && make
        - echo "Starting the server..."
        - ./build/server.out & echo $! > server.pid
        - sleep 5
        - echo "Running tests..."
        - python3 tests/http/tests.py